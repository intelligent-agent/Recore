/*
 * Copyright (c) 2016 ARM Ltd.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This library is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This library is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "sun50i-a64.dtsi"

#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Recore-linux-A3";
	compatible = "pine64,pine64", "allwinner,sun50i-a64";

	aliases {
		ethernet0 = &emac;
		serial0 = &uart0;
		serial1 = &uart1;
		serial2 = &uart2;
		serial3 = &uart3;
		serial4 = &uart4;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	hdmi-connector {
		compatible = "hdmi-connector";
		type = "a";

		port {
			hdmi_con_in: endpoint {
				remote-endpoint = <&hdmi_out_con>;
			};
		};
	};
  leds {
    compatible = "gpio-leds";

    heartbeat-led {
      label = "recore:blue:heartbeat";
      gpios = <&pio 1 4 GPIO_ACTIVE_HIGH>;
      linux,default-trigger = "heartbeat";
    };

    emmc-led {
      label = "recore:blue:emmc";
      gpios = <&pio 1 5 GPIO_ACTIVE_HIGH>;
      linux,default-trigger = "mmc0";
    };

    cpu-led {
      label = "recore:blue:cpu";
      gpios = <&pio 1 6 GPIO_ACTIVE_HIGH>;
      linux,default-trigger = "cpu1";
      default-state = "on";
    };

    user-led {
      label = "recore:blue:user";
      gpios = <&pio 1 7 GPIO_ACTIVE_HIGH>;
      default-state = "off";
    };
  };

  reg_usb1_vbus1: usb1-vbus1 {
          compatible = "regulator-fixed";
          regulator-name = "usb1-vbus1";
          gpio = <&pio 7 0 GPIO_ACTIVE_HIGH> ; /* PH0 */
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          regulator-boot-on;
          regulator-always-on;
          enable-active-high;
          status = "okay";
  };

  reg_usb1_vbus2: usb1-vbus2 {
          compatible = "regulator-fixed";
          regulator-name = "usb1-vbus2";
          gpio = <&pio 7 1 GPIO_ACTIVE_HIGH> ; /* PH1 */
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          regulator-boot-on;
          regulator-always-on;
          enable-active-high;
          status = "okay";
  };

  reg_usb1_vbus3: usb1-vbus3 {
          compatible = "regulator-fixed";
          regulator-name = "usb1-vbus3";
          gpio = <&pio 7 2 GPIO_ACTIVE_HIGH> ;
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          regulator-boot-on;
          regulator-always-on;
          enable-active-high;
          status = "okay";
  };

  reg_usb1_vbus4: usb1-vbus4 {
          compatible = "regulator-fixed";
          regulator-name = "usb1-vbus4";
          gpio = <&pio 7 3 GPIO_ACTIVE_HIGH> ; /* PH3 */
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          regulator-boot-on;
          regulator-always-on;
          enable-active-high;
          status = "okay";
  };

  es_power: enable_es_power {
          compatible = "regulator-fixed";
          regulator-name = "endstops-5V";
          gpio = <&pio 6 11 GPIO_ACTIVE_HIGH> ; /* PG11 */
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          enable-active-high;
          status = "disabled";
  };


  /*thermocouple_power: thermocouple_power {
          compatible = "regulator-fixed";
          regulator-name = "Thermocouple-5V";
          gpio = <&pio 6 10 GPIO_ACTIVE_HIGH> ;
          regulator-min-microvolt = <5000000>;
          regulator-max-microvolt = <5000000>;
          enable-active-high;
          status = "okay";
  };*/

    /*thermocouple_enable {
        compatible = "reg-userspace-consumer";
        regulator-name = "thermocouple-enable";
        regulator-boot-on;
        regulator-supplies = "vcc";
        vcc-supply = <&thermocouple_power>;
        comment = "Yes";
  };*/

  input-current {
        compatible = "reg-userspace-consumer";
        regulator-name = "input-current";
	      regulator-boot-on;
	      regulator-supplies = "current-control";
        current-control-supply = <&reg_dldo2>;
        comment = "Board current trip value";
  };
};

&de {
	status = "okay";
};

&ehci0 {
	status = "okay";
};

&ehci1 {
	status = "okay";
};

&emac {
	pinctrl-names = "default";
	pinctrl-0 = <&rgmii_pins>;
	phy-mode = "rgmii";
	phy-handle = <&ext_rgmii_phy>;
	status = "okay";
};

&hdmi {
	hvcc-supply = <&reg_dldo1>;
	status = "okay";
};

&hdmi_out {
	hdmi_out_con: endpoint {
		remote-endpoint = <&hdmi_con_in>;
	};
};


&mdio {
	ext_rgmii_phy: ethernet-phy@1 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <7>;
	};
};


&mmc2 {
	pinctrl-names = "default";
  pinctrl-0 = <&mmc2_pins>, <&mmc2_ds_pin>;
	vmmc-supply = <&reg_dcdc1>;
  vqmmc-supply = <&reg_eldo1>;
  non-removable;
	bus-width = <8>;
  cap-mmc-hw-reset;
  mmc-hs200-1_8v;
  max-frequency = <150000000>;
	status = "okay";
};

&ohci0 {
	status = "okay";
};

&ohci1 {
	status = "okay";
};

&r_rsb {
	status = "okay";

	axp803: pmic@3a3 {
		compatible = "x-powers,axp803";
		reg = <0x3a3>;
		interrupt-parent = <&r_intc>;
		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
	};
};

#include "axp803.dtsi"

&ac_power_supply {
	status = "okay";
};

&battery_power_supply {
	status = "disabled";
};

&reg_aldo1 {
	regulator-always-on;
	regulator-min-microvolt = <0700000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-emmc";
};

&reg_aldo3 {
	regulator-always-on;
	regulator-min-microvolt = <3000000>;
	regulator-max-microvolt = <3000000>;
	regulator-name = "vcc-pll-avcc";
};

&reg_dc1sw {
  regulator-always-on;
	regulator-name = "vcc-phy";
};

&reg_dcdc1 {
	regulator-always-on;
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-3v3";
};

&reg_dcdc2 {
	regulator-always-on;
	regulator-min-microvolt = <1040000>;
	regulator-max-microvolt = <1300000>;
	regulator-name = "vdd-cpux";
};

/* DCDC3 is polyphased with DCDC2 */

/*
 * The DRAM chips used by Pine64 boards are DDR3L-compatible, so they can
 * work at 1.35V with less power consumption.
 * As AXP803 DCDC5 cannot reach 1.35V accurately, use 1.36V instead.
 */
&reg_dcdc5 {
	regulator-always-on;
	regulator-min-microvolt = <1360000>;
	regulator-max-microvolt = <1360000>;
	regulator-name = "vcc-dram";
};

&reg_dcdc6 {
	regulator-always-on;
	regulator-min-microvolt = <1100000>;
	regulator-max-microvolt = <1100000>;
	regulator-name = "vdd-sys";
};

&reg_dldo1 {
	regulator-min-microvolt = <3300000>;
	regulator-max-microvolt = <3300000>;
	regulator-name = "vcc-hdmi";
};

&reg_dldo2 {
	regulator-min-microvolt = <3400000>;
	regulator-max-microvolt = <3400000>;
	regulator-name = "current-control";
	regulator-always-on;
};


&gpio0_ldo {
  function = "ldo";
};

&gpio1_ldo {
  function = "ldo";
};

&reg_ldo_io0 {
  regulator-always-on;
  regulator-min-microvolt = <700000>;
  regulator-max-microvolt = <700000>;
  regulator-name = "vcc-vref-e1";
	status = "okay";
};


&reg_ldo_io1 {
  regulator-always-on;
  regulator-min-microvolt = <700000>;
  regulator-max-microvolt = <700000>;
  regulator-name = "vcc-vref-e0";
  status = "okay";
};

&reg_dldo3 {
  regulator-always-on;
  regulator-min-microvolt = <700000>;
  regulator-max-microvolt = <700000>;
  regulator-name = "vcc-vref-e2";
  status = "okay";
};

&reg_dldo4 {
  regulator-always-on;
  regulator-min-microvolt = <700000>;
  regulator-max-microvolt = <700000>;
  regulator-name = "vcc-vref-e3";
  status = "okay";
};


&reg_eldo1 {
  regulator-always-on;
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-name = "cpvdd";
};

/*
 * The A64 chip cannot work without this regulator off, although
 * it seems to be only driving the AR100 core.
 * Maybe we don't still know well about CPUs domain.
 */
&reg_fldo2 {
	regulator-always-on;
	regulator-min-microvolt = <1100000>;
	regulator-max-microvolt = <1100000>;
	regulator-name = "vdd-cpus";
};

&reg_rtc_ldo {
	regulator-name = "vcc-rtc";
};

&simplefb_hdmi {
	vcc-hdmi-supply = <&reg_dldo1>;
};

/* Debug port */
&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pb_pins>;
	status = "okay";
};

/* AR100 null-modem */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};


/* TMC2209 */
&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins>;
	status = "okay";
};

/* TMC2209 */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart3_pins>;
	/*status = "okay";*/
};

/* uC */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
	status = "okay";
};

&usb_otg {
	dr_mode = "peripheral";
	status = "okay";
};

&usbphy {
  usb1_vbus-supply = <&reg_usb1_vbus1>, <&reg_usb1_vbus2>, <&reg_usb1_vbus3>, <&reg_usb1_vbus4>;
	status = "okay";
};
